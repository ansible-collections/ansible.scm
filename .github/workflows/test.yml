name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request_target:
    branches: [main]
    types:
    - labeled
    - opened
    - reopened
    - synchronize
  workflow_dispatch:

jobs:
  safe-to-test:
    if: >-
      github.event.label.name == 'safe to test' ||
      github.event.action != 'labeled'
    uses: ansible-network/github_actions/.github/workflows/safe-to-test.yml@main
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tox-matrix:
    needs:
      - safe-to-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install tox
        run: python -m pip install tox --disable-pip-version-check

      - name: Generate matrix
        id: generate-matrix
        run: |
          python -m tox --gh-matrix

    outputs:
      envlist: ${{ steps.generate-matrix.outputs.envlist }}

  test:
    needs: tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: ${{ fromJson(needs.tox-matrix.outputs.envlist) }}
    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.entry.python }}

      - name: Install tox
        run: python -m pip install tox --disable-pip-version-check

      - name: Run tox
        run: python -m tox -e ${{ matrix.entry.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  test_passed:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: >-
          python -c "assert set([
          '${{ needs.test.result }}',
          ]) == {'success'}"
