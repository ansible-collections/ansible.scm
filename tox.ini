[tox]
env_list =
    lint,
    {integration, sanity, unit}-py3.8-{2.9, 2.12, 2.13}
    {integration, sanity, unit}-{py3.9, py3.10}-{2.12, 2.13, 2.14, milestone, devel}
    {integration, sanity, unit}-py3.11-{2.14, milestone, devel}
minversion = 4.4.8
package = external

[vars]
name=ansible
namespace=scm
galaxy_build_dir = {envtmpdir}/{[vars]name}/{[vars]namespace}/
collections_root = {envtmpdir}/collections/
collection_install_dir = {[vars]collections_root}/ansible_collections/{[vars]name}/{[vars]namespace}/
url_base = https://github.com/ansible/ansible/archive/

[testenv]
description = run the tests with pytest

setenv =
    ANSIBLE_COLLECTIONS_PATH = {[vars]collections_root}

passenv =
    GITHUB_TOKEN
deps =
    integration,unit: -r requirements.txt
    integration,unit: -r test-requirements.txt
    lint: pre-commit
    2.9: {[vars]url_base}stable-2.9.tar.gz
    2.12: {[vars]url_base}stable-2.12.tar.gz
    2.13: {[vars]url_base}stable-2.13.tar.gz
    2.14: {[vars]url_base}stable-2.14.tar.gz
    milestone: {[vars]url_base}milestone.tar.gz
    devel: {[vars]url_base}devel.tar.gz

skip_install = true
allowlist_externals =
    bash
    cp
    git
    rm

commands_pre =
    # Clone the repo before the build to leave behing gitignored files.
    git clone {toxinidir} {[vars]galaxy_build_dir}
    # make sure the toxfile.py is not included in the collection
    rm -rf {[vars]galaxy_build_dir}toxfile.py
    bash -c '\
        cd {[vars]galaxy_build_dir} && \
        ansible-galaxy collection build && \
        ansible-galaxy collection install *.tar.gz --force -p {[vars]collections_root} \
        '
    # https://github.com/ansible/ansible/issues/68499
    bash -c '\
        cd {[vars]collection_install_dir} && \
        git config --global init.defaultBranch main && \
        git init .\
        '
    # Avoid "Setuptools is replacing distutils"
    sanity-py3.8-2.9: pip install setuptools==57.5.0
    pip freeze --all

changedir =
    sanity: {[vars]collection_install_dir}
    unit: {[vars]collections_root}

commands =
    integration: python -m pytest -p no:ansible-units {toxinidir}/tests/integration
    sanity: bash -c "ansible-test sanity --local --requirements --python $(echo {envname} | awk -F 'py|-' '{print $3}')"
    unit: python -m pytest -p no:ansible-units {toxinidir}/tests/unit

[testenv:lint]
commands_pre =
    python --version
    pip freeze --all
commands = pre-commit run --all-files


[testenv:{integration, unit}-py3.8-2.9]
# ansible 2.9 tests require the use of pytest-ansible-units to inject the path
# and therefore the galaxy.yml file, the collection install is temporary
# unit pytes-ansible-units can respect a different ANSIBLE_COLLECTIONS_PATH
changedir =
    unit: {[vars]collection_install_dir}
commands =
    integration:
        bash -c '\
        cd {[vars]galaxy_build_dir} && \
        ansible-galaxy collection install *.tar.gz \
        '
        python -m pytest {toxinidir}/tests/integration
    unit:
        cp {toxinidir}/galaxy.yml {[vars]collection_install_dir}
        python -m pytest {toxinidir}/tests/unit
